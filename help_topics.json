[
  {"id":"intro","title":"Introduction & Architecture","category":"Getting Started","body":"# Introduction\nClone Website to Docker Tool performs a reproducible multi‑phase snapshot of a target site (public or authenticated) and can package it as a minimal `nginx:alpine` Docker image. This help content reflects actual implementation in `cw2dt_core.py`.\n\n## Pipeline Phases\n| Phase | Core Implementation | Always? | Notes |\n|-------|---------------------|---------|-------|\n| Static Clone | `_wget2_progress()` running wget2 | Yes | Parallel mirroring, link conversion, resume. |\n| Prerender | `_run_prerender()` (+ isolated fallback) | Optional | Headless Chromium DOM snapshots, route & API capture. |\n| Integrity | `compute_checksums()` / `run_verification()` | Optional | Hashing + fast/deep verify. |\n| Diff | `_snapshot_file_hashes()` + `_compute_diff()` | Optional | Added / removed / modified classification. |\n| Docker Build | Inline file writes in `clone_site()` | Optional | Dockerfile + nginx.conf with routing mode. |\n| Serve / Run | Python http.server or `docker run` | Optional | Local preview vs container parity. |\n\n## Quick Start\n1. Enter URL (scheme auto-added if missing).\n2. Choose destination folder + Docker name.\n3. Enable Prerender for SPAs / dynamic content.\n4. (Optional) Checksums + Diff for audits.\n5. Clone, then Serve Folder or Run built image.\n\n## Feature Cheat Sheet\n| Scenario | Enable | Reason |\n|----------|--------|--------|\n| Static brochure | (None) | Fastest. |\n| React/Vue/Next SPA | Prerender + Router Intercept | JS-rendered routes & data. |\n| Data/API offline | Prerender + Capture API (+ types) | Preserve JSON responses. |\n| GraphQL app | + Capture GraphQL | Archive queries/responses. |\n| Infinite scroll feed | + Scroll Passes (+ hook) | Surface lazy items. |\n| Frequent recrawl | Incremental + Diff | Save bandwidth, track drift. |\n| Integrity audit | Checksums + Verify + Diff | Evidence of change. |\n| Flaky origin | Resilient + Auto Backoff | Higher success probability. |\n| High error tolerance | Allow Degraded + tune threshold | Accept partial but classify. |\n| Hardened offline copy | Disable JS + strict routing | Reduce attack surface. |\n\nSee also: [[basic_settings]] · [[clone_options]] · [[prerender]] · [[quality_resilience]] · [[troubleshooting_overview]]"},
  {"id":"basic_settings","title":"Basic Settings (URL, Destination, Ports)","category":"Getting Started","body":"## Basic Settings\n| Field | Description | Implementation Note |\n|-------|-------------|--------------------|\n| Website URL | Start URL (normalized) | If missing scheme, `https://` prepended. |\n| Destination Folder | Parent path for project | If last component equals docker name, not duplicated. |\n| Docker Name | Project & image tag | Determines subfolder + README_<name>.md. |\n| Bind IP | Serve/run bind interface | 0.0.0.0 for LAN; 127.0.0.1 local only. |\n| Host/Container Port | Mapping for container | Container defaults 80; collision check performed. |\nValidation errors produced by `validate_required_fields()`.\n\nSee also: [[clone_options]] · [[routing_mode]]"},
  {"id":"output_layout","title":"Output Layout & Manifest","category":"Getting Started","body":"## Output Structure\n| Path | Condition | Purpose |\n|------|-----------|---------|\n| Dockerfile | Always | nginx container recipe. |\n| nginx.conf | Always | Routing mode + optional CSP. |\n| clone_manifest.json | Unless --no-manifest | Metadata, warnings, verification results. |\n| imported_cookies.txt | Browser cookie import | Netscape cookie jar used by wget2. |\n| _api/ | capture_api | JSON/text API responses. |\n| _graphql/ | capture_graphql | GraphQL request/response envelopes. |\n| _storage/ | capture_storage | local/session storage snapshots. |\n| verify_checksums.py | After verification (copied) | Portability of hash validation. |\n| README_<name>.md | Always | Summary + verification appendix. |\n\nDiff statistics and checksum maps embedded/updated in manifest. Verification adds a `verification` block (status, counts).\n\nSee also: [[integrity]] · [[diff_incremental]]"},
  {"id":"clone_options","title":"Clone Options Explained","category":"Features","body":"## Core Clone Options\n| Option | Field/Flag | Effect | When | Trade-Off |\n|--------|-----------|--------|------|----------|\n| Build Docker image | build / --build | Create Docker image after clone | Need portable artifact | Build time + Docker dependency |\n| Run built image | run_built / --run-built | Auto run container | Quick validation | Fails if port/name conflict |\n| Serve Folder | serve_folder / --serve-folder | Python http.server preview | Rapid iteration | Not container parity |\n| Open browser | open_browser / --open-browser | Auto-launch URL | Convenience | None |\n| Incremental | incremental / -N | Skip unchanged remote objects (timestamp/size) | Repeated recrawls | Depends on server metadata |\n| Diff vs last | diff_latest / --diff-latest | Added/removed/modified summary | Change tracking | Snapshot overhead |\n| Estimate first | estimate_first / --estimate | Pre-spider count estimate | Capacity planning | Minor pre-delay |\n| Checksums | checksums / --checksums | Hash HTML + JSON (+ extras) | Integrity/diff evidence | I/O cost |\n| Verify after | verify_after / --verify-after | Fast verification (ignore missing) | Immediate trust | Extra pass |\n| Verify deep | verify_deep / --verify-deep | Missing counts as failure | Audits/CI gating | Slower |\n| Cleanup | cleanup / --cleanup | Remove helper build artifacts | Reduce clutter | Less forensic detail |\n| Disable JS | disable_js / --disable-js | Strip <script> + add CSP | Harden snapshot | Breaks client UX |\n\nSee also: [[integrity]] · [[diff_incremental]] · [[quality_resilience]] · [[dependencies]]"},
  {"id":"prerender","title":"Dynamic Prerender & Stability","category":"Dynamic Capture","body":"## Prerender Internals\nImplemented in `_run_prerender()`. Sequence per page: goto(networkidle) → (router script inject) → hook → settle delay → wait selector → scroll passes → optional DOM stability wait (MutationObserver) → storage snapshot → HTML rewrite & save → enqueue links/routes.\n\n### Key Fields\n| Field | CLI | Purpose | Default |\n|-------|-----|---------|---------|\n| prerender | --prerender | Enable headless DOM capture | False |\n| prerender_max_pages | --prerender-max-pages | Page/route cap | 40 |\n| prerender_scroll | --prerender-scroll | Incremental scroll passes | 0 |\n| dom_stable_ms | --dom-stable-ms | Quiet mutation window required | 0 |\n| dom_stable_timeout_ms | --dom-stable-timeout-ms | Max additional wait for stability | 4000 |\n| capture_api(_types,_binary) | --capture-api / --capture-api-types / --capture-api-binary | Persist API responses | Off |\n| capture_graphql | --capture-graphql | Persist GraphQL ops | Off |\n| capture_storage | --capture-storage | Save local/sessionStorage JSON | Off |\n| hook_script | --hook-script | Custom automation per page | None |\n| rewrite_urls | --no-url-rewrite (negates) | Make origin absolute links relative | True |\n\nPlaywright missing → prerender skipped with `_playwright_missing` stats; repeated runtime issues trigger isolated subprocess fallback.\n\nPerformance: raise `prerender_max_pages` gradually; use router allow/deny filters to bound explosion.\n\nSee also: [[router]] · [[api_capture]] · [[troubleshooting_dynamic]] · [[dependencies]]"},
  {"id":"router","title":"Router Interception (SPA Discovery)","category":"Dynamic Capture","body":"## Router Interception\nInjects script to patch history.pushState/replaceState, listens to popstate, hashchange, delegated anchor clicks. Normalizes same-origin routes and enqueues if under limits and filters permit.\n\n| Field | CLI | Purpose | Default |\n|-------|-----|---------|---------|\n| router_intercept | --router-intercept | Enable interception | False |\n| router_include_hash | --router-include-hash | Treat #fragment as route component | False |\n| router_max_routes | --router-max-routes | Additional routed pages cap | 200 |\n| router_settle_ms | --router-settle-ms | Post-load wait for auto nav | 350 |\n| router_wait_selector | --router-wait-selector | Require selector before snapshot | None |\n| router_allow | --router-allow | Whitelist regex list | None |\n| router_deny | --router-deny | Blacklist regex list | None |\n| router_quiet | --router-quiet | Suppress per-route logs | False |\n\nRegex patterns scanned by `detect_risky_regex()`; warnings emitted as events. Use allow early to constrain dynamic param sets.\n\nSee also: [[prerender]] · [[regex_safety]] · [[troubleshooting_dynamic]] · [[dependencies]]"},
  {"id":"regex_safety","title":"Regex Safety (Allow / Deny)","category":"Dynamic Capture","body":"## Regex Safety\nHeuristic validator `detect_risky_regex()` flags obvious catastrophic patterns (nested repeating groups, consecutive wildcards). Keep patterns: anchored, explicit, and minimal. Favor `^/docs/` over `.*docs.*`.\n\nSee also: [[router]]"},
  {"id":"api_capture","title":"API, GraphQL, Binary & Storage Capture","category":"Dynamic Capture","body":"## API/Data Capture\nPlaywright response hook inspects content-type & request body.\n\n| Mode | Trigger | Output | Notes |\n|------|---------|--------|-------|\n| JSON/Text API | content-type prefix list (default application/json) | _api/ | Adds extension (.json/.txt/.csv/.xml). |\n| Binary API | pdf/octet/image/video/audio prefixes | _api/ | Fallback .bin extension if unknown. |\n| GraphQL | POST body contains \"query\" or query markers | _graphql/ | Stored as operationName-index.graphql.json. |\n| Storage | capture_storage enabled | _storage/ | local+session storage per page (.storage.json). |\n\nLarge binary capture increases disk/time; omit if not needed.\n\nSee also: [[prerender]] · [[diff_incremental]] · [[dependencies]]"},
  {"id":"routing_mode","title":"Nginx Routing Modes","category":"Deployment","body":"## Routing Modes\n| Mode | try_files Rule | Behavior | Use Case |\n|------|----------------|----------|---------|\n| strict | $uri $uri/ =404 | 404 if file absent | Pure static |\n| spa | $uri $uri/ /index.html | SPA fallback | Client-routed apps |\n| ext | $uri $uri/ $uri.html =404 | Add .html for extensionless | Marketing URLs |\n| hybrid | $uri $uri/ $uri.html /index.html | Ext then SPA fallback | Mixed static + SPA |\nCSP header appended if JS disabled (script-src 'none'; frame-src 'none').\n\nSee also: [[link_rewrite]] · [[js_stripping]]"},
  {"id":"link_rewrite","title":"Internal Link Rewriting","category":"Deployment","body":"## Link Normalization\nPost-clone HTML/CSS processing: (1) same-origin absolute → root-relative, (2) collapse malformed https:/// artifacts, (3) strict mode adds .html to extensionless root anchors when file exists. Stats emitted in `rewrite_links` event (processed, rewritten, collapsed, ext_added). Disable via rewrite_urls=False / --no-url-rewrite.\n\nSee also: [[routing_mode]]"},
  {"id":"integrity","title":"Integrity: Checksums & Verification","category":"Integrity","body":"## Integrity\n`compute_checksums()` hashes HTML/HTM + captured JSON + extra extensions. `run_verification()` appends verification summary to manifest & README_<name>.md.\n\n| Option | Effect | Notes |\n|--------|-------|-------|\n| Checksums | Store digest map | Key for later diff/audit. |\n| checksum_ext | Include extra suffixes | Comma separated (css,js,png). |\n| Verify after | Fast verification (ignore missing) | Adds verification block. |\n| Verify deep | Strict (missing fails) | Combine with CI gating. |\n\nSee also: [[diff_incremental]] · [[output_layout]]"},
  {"id":"diff_incremental","title":"Incremental Clone & Diff","category":"Integrity","body":"## Incremental & Diff\nIncremental: wget2 -N skips unchanged by size/timestamp. Diff: snapshot previous & current file hashes/size; classify added/removed/modified.\n\nGuidance: If server timestamps unreliable, rely on diff + checksums (optionally add --no-if-modified-since). Clean old output to ensure removed resources show up as removed.\n\nSee also: [[integrity]] · [[quality_resilience]]"},
  {"id":"quality_resilience","title":"Resilience & Quality Classification","category":"Reliability","body":"## Resilience & Quality\nError statistics parsed from saved wget2 stderr (http_4xx, http_5xx, dns, tls, other, total_urls). error_ratio=(sum errors)/total. If ratio > failure_threshold: run marked degraded (unless allow_degraded false → failure).\n\n| Feature | Field | Purpose | Implementation |\n|---------|-------|---------|---------------|\n| Resilient | resilient | Broader retries/timeouts up front | Adds retry-on-http-error + tries=4 + waitretry + timeout + retry-connrefused. |\n| Relaxed TLS | relaxed_tls | Diagnostic TLS leniency + no keep-alive/cache | Also sets insecure flag. |\n| Failure Threshold | failure_threshold | Degraded boundary (default 0.15) | Compared after pass. |\n| Allow Degraded | allow_degraded | Treat high-ratio run as success | Emits clone_quality with degraded=true. |\n| Auto Backoff | auto_backoff | Reduced-thread retry if fail or high ratio | Halves concurrency; adds retries. |\n| Adaptive Concurrency | adaptive_concurrency | Experimental mid-run restart lowering jobs when transient error ratio spikes | Emits adaptive_concurrency_adjust event. |\n\nSee also: [[troubleshooting_overview]] · [[troubleshooting_performance]] · [[dependencies]]"},
  {"id":"ai_chat_assistant","title":"AI Chat Assistant","category":"Guidance","body":"## AI Chat Assistant\nInteractive OpenRouter-backed assistant embedded in the GUI. Helps interpret logs, suggest safe configuration adjustments, and highlight potential risks before applying.\n\n### Capabilities\n- Streaming or non-streaming responses (toggle)\n- Watch Mode: periodic log tail analysis every ~25s cooldown\n- Parses JSON \"Changes\" proposals (whitelist enforced)\n- Risk heuristics surface potentially destabilizing adjustments (jobs scaling, failure_threshold raise, relaxed TLS, disabling integrity)\n- Diff preview dialog for selective field application\n- Transcript logging (redacts bearer tokens) saved under project .cw2dt/ directory when enabled\n\n### Events\nEmits GUI-level structured events (see EVENTS.md): ai_changes_proposed, ai_changes_risk, ai_changes_applied, ai_changes_undo.\n\n### Safe Use Tips\n- Review risk-highlighted fields before apply\n- Keep streaming off on slow networks to reduce API round trips\n- Maintain small, incremental adjustments; avoid large concurrency jumps manually after AI suggestions\n\nSee also: [[quality_resilience]] · [[auto_retry_ai]]"},
  {"id":"structured_events","title":"Structured Events & JSON Logs","category":"Advanced","body":"## Structured Events\nEnable via json_logs or events_file. Events (partial list): start, phase_start, clone_fail_stats, clone_fail_stats_second, clone_quality, regex_warning, prerender_retry, prerender_isolation, nginx_validation, rewrite_links, plugin_loaded, canceled, summary. Each includes: event, ts, seq, run_id, schema_version, tool_version + payload fields. Use for CI quality gating or telemetry.\n\nSee also: [[quality_resilience]] · [[link_rewrite]]"},
  {"id":"js_stripping","title":"JavaScript Stripping & CSP","category":"Security","body":"## JS Stripping\nIf disable_js set: regex removes <script> blocks (external + inline). Stats logged: scanned, stripped, external, inline. nginx.conf adds CSP: script-src 'none'; frame-src 'none'. Breaks client interactivity; use for hardened archival copies.\n\nSee also: [[security_considerations]] · [[routing_mode]]"},
  {"id":"auth_cookies","title":"Authentication & Cookies","category":"Features","body":"## Authentication\n| Method | Fields/Flags | Mechanism | Notes |\n|--------|--------------|----------|-------|\n| Basic Auth | auth_user / auth_pass | wget2 --http-user/--http-password | Password masked in repro logs. |\n| Existing Cookie Jar | cookies_file | wget2 --load-cookies | Netscape format. |\n| Browser Import | import_browser_cookies | browser_cookie3.load() filtered by domain | Writes imported_cookies.txt. |\nUse only with authorized access; avoid sensitive personal sessions.\n\nSee also: [[security_considerations]] · [[troubleshooting_http]] · [[dependencies]]"},
  {"id":"performance_limits","title":"Performance, Threads & Throttle","category":"Performance","body":"## Performance Controls\n| Setting | Field | Implementation | Guidance |\n|---------|-------|--------------|----------|\n| Threads | jobs | --max-threads= / --jobs= (auto-detect) | Start 8–16; reduce on 429/503. |\n| Throttle | throttle | --limit-rate (K/M/G suffix) | Use to avoid saturating link. |\n| Size Cap | size_cap | --quota (computed suffix) | Prevent runaway large sites. |\n| Scroll Passes | prerender_scroll | window.scrollTo loop | Only for lazy-load/infinite feeds. |\n| DOM Stable ms | dom_stable_ms | MutationObserver poll | Adds latency; enable if flicker. |\n| Auto Backoff | auto_backoff | Reduced concurrency retry | Helps flaky origins. |\n\nSee also: [[quality_resilience]] · [[troubleshooting_performance]]"},
  {"id":"extensibility","title":"Hook Script & Plugins","category":"Extensibility","body":"## Extensibility\n| Mechanism | Location | Trigger | Signature | Use Case |\n|-----------|----------|--------|----------|---------|\n| Hook Script | Arbitrary .py | During prerender (per page) | on_page(page,url,context) | Login, expand UI, scroll. |\n| Plugins | plugins_dir/*.py | Pre-download (pre_download) | pre_download(context) | Environment prep, adjustments. |\nHook loaded via runpy; failures logged but non-fatal. Keep idempotent; avoid infinite loops.\n\nSee also: [[prerender]] · [[api_capture]]"},
  {"id":"troubleshooting_overview","title":"Troubleshooting Overview","category":"Troubleshooting","body":"## Troubleshooting Overview\nCategories: network (code 4), TLS (5), auth (6), server (8), high error ratio, dynamic gaps, performance stalls. Use Diagnostics to parse tail.\n\nQuick Steps: (1) Custom User-Agent for early 403/406/503, (2) Reduce threads on 429/503, (3) Enable Resilient, (4) Only use Relaxed TLS to isolate cert issues, (5) Add prerender + router for missing dynamic content, (6) Scroll passes for infinite feeds.\n\nSee also: [[troubleshooting_http]] · [[troubleshooting_dynamic]] · [[troubleshooting_performance]] · [[diagnostics_tool]]"},
  {"id":"troubleshooting_http","title":"HTTP Errors & Exit Codes","category":"Troubleshooting","body":"## HTTP / Exit Codes\n| Code | Meaning | Hint |\n|------|--------|------|\n| 2 | Usage / parse error | Re-check extra args |\n| 4 | Network failure | Add retries / lower threads |\n| 5 | SSL/TLS failure | Relaxed TLS (diagnose) then fix chain |\n| 6 | Auth failure | Verify credentials/cookies |\n| 8 | Server error (4xx/5xx bursts) | UA override, lower threads, backoff |\n403: UA & cookies; 429: lower threads + waitretry; 503: concurrency + retries; 404-only: verify canonical URL.\n\nSee also: [[quality_resilience]] · [[diagnostics_tool]]"},
  {"id":"troubleshooting_dynamic","title":"Dynamic / SPA Issues","category":"Troubleshooting","body":"## Dynamic Issues\n| Symptom | Cause | Fix |\n|---------|------|----|\n| Blank prerender | Playwright missing/launch fail | Install playwright + chromium |\n| Partial DOM | Too short settle/stability window | Raise router_settle_ms or dom_stable_ms |\n| Missing routes | Route cap or filters | Increase router_max_routes / adjust allow/deny |\n| Incomplete infinite scroll | scroll passes too low | Increase prerender_scroll or hook script |\n| Missing API JSON | content-type mismatch | Add capture_api_types |\n| GraphQL absent | Body lacks query marker | Confirm queries; use capture_graphql |\n| Empty storage snapshots | Data written late | Increase settle or dom_stable_ms |\n\nSee also: [[prerender]] · [[router]] · [[api_capture]]"},
  {"id":"troubleshooting_performance","title":"Performance & Resource Tuning","category":"Troubleshooting","body":"## Performance Tuning\n| Problem | Likely Root | Mitigation |\n|---------|-----------|-----------|\n| Slow clone | High latency + low threads | Raise threads gradually (<=16) |\n| 429 / throttle | Too many threads | Lower threads; add retry/backoff |\n| High prerender CPU | Excess pages / scroll passes | Reduce prerender_max_pages & passes |\n| Huge disk usage | Capturing unnecessary binaries | Disable capture_api_binary; tighten allow filters |\n| High error ratio | Aggressive concurrency | Resilient + auto_backoff; halve threads |\n\nSee also: [[performance_limits]] · [[quality_resilience]]"},
  {"id":"diagnostics_tool","title":"Diagnostics Tool","category":"Troubleshooting","body":"## Diagnostics Tool\nAnalyzes recent stderr lines: exit code, repetitive HTTP codes, TLS phrases, malformed host lines, port errors, high error ratio. Outputs ordered suggestions (UA override, thread reduction, retry flags, TLS investigation, regex refinement). Use after a failed or degraded run before large config changes.\n\nSee also: [[troubleshooting_overview]] · [[troubleshooting_http]]"},
  {"id":"wget_args","title":"Advanced wget2 Arguments","category":"Advanced","body":"## Advanced wget2 Args\nExamples:\n- Retry/backoff: --retry-on-http-error=429,500,503 --tries=3 --waitretry=2\n- Force revalidation: --no-if-modified-since\n- Reject analytics: --reject-regex='.*(tracking|analytics).*'\n- Custom UA: --user-agent='Mozilla/5.0 ...'\n- Pace requests: --wait=0.5\nCredentials masked in failure repro logging.\n\nSee also: [[quality_resilience]]"},
  {"id":"security_considerations","title":"Security & Legal Considerations","category":"Security","body":"## Security & Legal\n- Clone only with authorization; respect applicable ToS/robots guidelines.\n- Relaxed TLS / insecure mode is diagnostic only (MITM risk).\n- Cookie import writes plain-text cookies; protect output directory.\n- Disable JS for hardened copies; combine with strict routing.\n- Use hook script to purge secrets from captured API payloads if distributing snapshot.\n- Avoid storing sensitive personal data unless required and compliant.\n\nSee also: [[js_stripping]] · [[auth_cookies]]"},
  {"id":"faq","title":"FAQ & Common Pitfalls","category":"Guidance","body":"## FAQ\nQ: Site loads partially offline.\nA: Enable prerender + router interception; raise prerender_max_pages.\n\nQ: Deep links 404 in container.\nA: Use routing mode spa or hybrid; rebuild image.\n\nQ: Error ratio high but assets look fine.\nA: Increase failure_threshold or enable Allow Degraded; inspect clone_fail_stats.\n\nQ: Incremental not skipping.\nA: Upstream timestamp anomalies; rely on diff + checksums or add --no-if-modified-since.\n\nQ: GraphQL not captured.\nA: Ensure POST body contains 'query'; enable capture_graphql.\n\nQ: Hook script ignored.\nA: Ensure function name on_page and Playwright installed (otherwise only minimal fallback invocation).\n\nQ: 403 flood.\nA: Provide modern desktop User-Agent + valid cookies; reduce concurrency.\n\nQ: Port in use.\nA: Change host port or stop existing server/container.\n\nSee also: [[troubleshooting_overview]] · [[prerender]] · [[routing_mode]]"},
  {"id":"auto_retry_ai","title":"Auto Retry Supervisor & AI Assist","category":"Reliability","body":"## Auto Retry Supervisor\nThe Auto Retry Supervisor wraps consecutive clone attempts (max_attempts) applying conservative heuristics after each failure *before* declaring overall failure.\n\n### Heuristic Adjustments (ordered)\n| Step | Trigger | Adjustment | Rationale |\n|------|---------|------------|-----------|\n| Enable Resilient | First failed attempt & resilient off | resilient=True | Broader retries/timeouts early |\n| Reduce Jobs | >=2nd failure & jobs>6 | jobs //=2 (min 4) | Lower concurrency reduces server stress |\n| Add Retry Args | Missing --retry-on-http-error | Append retry/backoff flags | Stabilize transient errors |\n\nSupervisor logs lines prefixed with [auto]. Attempt lines: `[auto] attempt X/Y starting` and either `succeeded` or `failed`.\n\n### Fields Potentially Mutated\nResilient, jobs, relaxed_tls, failure_threshold, allow_degraded, prerender, router_intercept, incremental, capture_api(_binary/_storage/_graphql), checksums, verify_after, verify_deep, prerender_max_pages, prerender_scroll.\n\n## AI Assist\nWhen enabled, after a failed attempt the tool POSTs a JSON payload (current_config, recent_logs tail, adjustable_fields) to a user-provided endpoint (see `ai_adapter.py`). The endpoint returns `{changes:{...}}` with a *subset* of allowed fields. Only valid whitelist keys are applied; others ignored.\n\n### Adapter Features\n| Feature | Behavior |\n|---------|----------|\n| Redaction | auth_user/auth_pass/cookies_file removed |\n| Caching | Repeats with identical signature served from memory |\n| Guardrails | jobs bounds (2..128), prerender_max_pages (1..2000), failure_threshold (0..1) |\n| Health | GET /health returns ok/model |\n| Explanation | Adds explanation string (ignored by core) |\n\n### Direct OpenRouter Fallback\nIf AI Assist enabled but endpoint blank and environment variable OPENROUTER_API_KEY is present, the supervisor invokes OpenRouter directly (no adapter) using a compact JSON-only prompt.\n\n### Safe Usage Tips\n- Monitor changes in console: `[auto][ai] applied: jobs=6, prerender=True`.\n- Keep max_attempts small (2–4).\n- Favor heuristics first; AI should refine (e.g., enabling prerender + router) not thrash settings.\n- Rotate API keys regularly; never embed keys in persisted profiles.\n\n### Disabling\nUncheck \"Enable Auto Retry Supervisor\" to revert to single attempt behavior.\n\nSee also: [[quality_resilience]] · [[troubleshooting_overview]]"},
  {"id":"dependencies","title":"Dependencies Overview","category":"Setup","body":"# Dependencies Overview\nCore runtime is Python; optional features require additional tools. This overview links to per-component install guides.\n\n| Component | Purpose | Required For | Mandatory | See Topic |\n|-----------|---------|-------------|----------|----------|\n| Python 3.10+ | Host runtime | GUI + core | Yes | [[dep_python]] |\n| wget2 | High-performance mirroring | Static clone phase | Yes (core) | [[dep_wget2]] |\n| Docker Engine | Build & run container image | --build / --run-built | Optional | [[dep_docker]] |\n| Playwright + Chromium | Dynamic prerendering | --prerender / router intercept | Optional | [[dep_playwright]] |\n| browser_cookie3 | Import browser cookies | import_browser_cookies | Optional | [[dep_browser_cookies]] |\n| PySide6 | GUI front-end | GUI usage | Bundled via pip | [[dep_pyside6]] |\n| OpenRouter API Key | AI Chat / Auto Retry AI | AI guidance & config proposals | Optional | [[dep_openrouter]] |\n| Git (optional) | Versioning / plugin dev | Plugins / source | Optional | External docs |\n\nQuick Start Minimal (static only): install Python + wget2.\nFull Dynamic Stack: add Playwright browsers + Docker; add OpenRouter key only if using AI features.\n\nSee also: [[prerender]] · [[clone_options]] · [[quality_resilience]]"},
  {"id":"dep_python","title":"Install: Python","category":"Setup","body":"## Python Installation\nTarget: Python 3.10 or newer (tested up to 3.13).\n\n### macOS\nHomebrew: <a href='https://brew.sh' style='color:#6cf;'>brew</a> install python@3.12\nEnsure `python3 -V` shows expected version. Create venv: `python3 -m venv .venv`\n\n### Debian/Ubuntu\n`sudo apt-get update && sudo apt-get install -y python3 python3-venv python3-pip`\nNewer versions: deadsnakes PPA (<a href='https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa' style='color:#6cf;'>link</a>).\n\n### Fedora / RHEL\n`sudo dnf install -y python3 python3-pip python3-virtualenv`\n\n### Windows\nInstaller: <a href='https://www.python.org/downloads/' style='color:#6cf;'>python.org</a> (check Add to PATH).\nwinget: `winget install Python.Python.3.12`\n\n### Best Practices\nUse per-project venv; pin versions.\n\nSee also: [[dependencies]]"},
  {"id":"dep_wget2","title":"Install: wget2","category":"Setup","body":"## wget2 Installation\nRequired for static cloning. Check: `wget2 --version`.\n\n### macOS\n`brew install wget2`\n\n### Debian/Ubuntu\n`sudo apt-get install -y wget2` (23.10+). Older: build from source (<a href='https://gitlab.com/gnuwget/wget2' style='color:#6cf;'>repo</a>):\n1. Install build deps (libidn2, libpsl, nghttp2, brotli, openssl).\n2. `git clone https://gitlab.com/gnuwget/wget2.git && cd wget2 && ./bootstrap && ./configure && make -j && sudo make install`\n\n### Fedora\n`sudo dnf install -y wget2`\n\n### Arch\n`sudo pacman -S wget2`\n\n### Windows\nMSYS2 + `pacman -S mingw-w64-ucrt-x86_64-wget2` or fetch CI artifacts (verify signatures).\n\n### Troubleshooting\nMissing HTTPS support → ensure openssl/gnutls dev libs present.\n\nSee also: [[wget_args]] · [[quality_resilience]]"},
  {"id":"dep_docker","title":"Install: Docker Engine","category":"Setup","body":"## Docker Installation\nNeeded only for image build/run.\n\n### macOS / Windows\nDocker Desktop: <a href='https://docs.docker.com/get-docker/' style='color:#6cf;'>Get Docker</a>\n\n### Linux Quick Script\n`curl -fsSL https://get.docker.com | sh` then `sudo usermod -aG docker $USER` (relogin).\n\n### Distro Packages\nFollow: <a href='https://docs.docker.com/engine/install/' style='color:#6cf;'>Engine Install Guide</a>\n\n### Verify\n`docker run --rm hello-world`\n\n### Optional\nUse `docker compose` plugin for multi-service tests.\n\nSee also: [[clone_options]] · [[routing_mode]]"},
  {"id":"dep_playwright","title":"Install: Playwright (Dynamic)","category":"Setup","body":"## Playwright Installation\nEnables prerender & dynamic capture.\n\n### Install\n`pip install playwright` then `playwright install chromium` (Linux full deps: `playwright install --with-deps chromium`).\n\n### Minimal vs Full\nChromium usually enough; add firefox/webkit if needed.\n\n### Headless Dependencies (Linux)\nIf errors about missing libs: run the --with-deps install or install gtk, nss, gbm, fonts.\n\n### Test\n`python -c \"from playwright.sync_api import sync_playwright;print('OK')\"`\n\n### Update\n`pip install -U playwright && playwright install chromium`\n\nSee also: [[prerender]] · [[router]] · [[api_capture]] · [[troubleshooting_dynamic]]"},
  {"id":"dep_browser_cookies","title":"Install: browser_cookie3","category":"Setup","body":"## browser_cookie3 Installation\nImports cookies from local browsers for authenticated sessions.\n\n### Install\n`pip install browser_cookie3`\n\n### macOS\nUses Keychain — allow access when prompted.\n\n### Windows\nRelies on DPAPI — run as same user session.\n\n### Security\nExports plaintext cookie jar; restrict directory access.\n\nSee also: [[auth_cookies]] · [[security_considerations]]"},
  {"id":"dep_pyside6","title":"Install: PySide6 (GUI)","category":"Setup","body":"## PySide6 Installation\nGUI toolkit. CLI mode does not require it.\n\n### Install\n`pip install PySide6`\n\n### Linux Missing xcb Plugin\nInstall system packages: libxcb, libxkbcommon, fontconfig.\n\n### High DPI Issues\nExport `QT_SCALE_FACTOR=1` or adjust OS scaling.\n\nSee also: [[dependencies]]"},
  {"id":"dep_openrouter","title":"OpenRouter API Key","category":"Setup","body":"## OpenRouter API Key\nEnables AI Chat Assistant (interactive guidance) and Auto Retry AI proposals when no custom endpoint is configured.\n\n### Obtain\n1. Visit https://openrouter.ai/ (account + dashboard).\n2. Generate an API key (copy; begins with sk-).\n\n### Configure\n- GUI: Tools → Set OpenRouter API Key (stored plaintext at ~/.cw2dt/ai_key.json).\n- Env: export OPENROUTER_API_KEY=sk-XXXX then launch.\n- Remove: delete file or clear via the same dialog.\n\n### Security\nTreat like any secret. Rotate if leaked. Profiles do not embed keys.\n\n### Used For\nStreaming chat, watch mode log analysis, automatic heuristic improvement suggestions after failed attempts.\n\nSee also: [[ai_chat_assistant]] · [[auto_retry_ai]]"}
]